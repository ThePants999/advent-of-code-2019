var searchIndex={};
searchIndex["main"] = {"doc":"","i":[[3,"OrbitalObject","main","An object that may be in orbit around another object…",null,null],[5,"load_orbits","","Loads a definition of orbits from file and constructs a…",null,[[["str"]],[["result",["hashmap","error"]],["hashmap",["string","rc"]],["error"]]]],[11,"new","","",0,[[["string"]],["self"]]],[11,"associate","","Links parent and child OrbitalObjects together…",0,[[["rc"]]]],[11,"get_depth","","Returns the orbital depth of this object, including…",0,[[["self"]],["u32"]]],[11,"find_common_ancestor","","Locates the lowest-level object that `first` and `second`…",0,[[["rc"]],[["option",["rc"]],["rc",["refcell"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"OrbitalObject"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);